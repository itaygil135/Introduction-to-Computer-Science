
import nonogram


def print_board(board):
    for item in board:
        for j in item:
            print(j , end=" ")
            print()


constrains = [[[2], [2, 1], [1, 3], [1, 1, 1, 1], [1, 1, 5],
                      [1, 1, 1, 1, 1, 1], [1, 1, 1, 2, 1],
                      [1, 1, 1, 1],
                      [1, 1, 4, 3], [4, 3, 2], [1, 1, 1, 1, 1],
                      [7, 2, 1],
                      [1, 1, 1, 1, 3], [1, 1, 1, 1, 1, 1],
                      [1, 1, 5, 3],
                      [1, 1, 5, 1, 1], [1, 1, 2, 2, 1, 1],
                      [1, 1, 2, 2, 1, 1], [1, 1, 1, 1, 5],
                      [1, 1, 2, 2, 1, 1]],
                     [[1, 2], [6, 9], [1, 1], [16], [1, 1, 1],
                      [1, 7, 1],
                      [2, 1, 2, 6], [2, 2, 2], [1, 2, 2, 6],
                      [1, 1, 1, 1, 6, 1], [2, 3, 2, 1, 1],
                      [1, 1, 1, 2, 10], [4, 2, 2, 1, 1, 1], [11],
                      [1]]]

constrains = [[[1], [1], [1], [1], [1]], [[1], [1], [1], [1], [1]]]
# print_board(nonogram.solve_nonogram(constrains))

constrains = [[[4], [3, 1], [2, 1, 1], [1, 2, 1], [2, 2, 1, 1],
  [3, 1, 1, 1], [1, 1, 1, 2], [3, 5], [1, 1, 2],
  [2, 2, 1], [1, 3, 1], [3, 1], [1, 1], [4], [4]],
 [[5, 2, 2], [3, 2, 1, 1, 3], [2, 1, 5, 2],
  [1, 1, 3, 1, 2], [1, 2, 8], [2, 1, 1, 1, 1],
  [1, 3],
  [1, 1, 4], [1, 2], [2]]]

constrains = [[[4], [3, 1], [2, 1, 1], [1, 2, 1], [2, 2, 1, 1],
                              [3, 1, 1, 1], [1, 1, 1, 2], [3, 5], [1, 1, 2],
                              [2, 2, 1], [1, 3, 1], [3, 1], [1, 1], [4], [4]],
                             [[5, 2, 2], [3, 2, 1, 1, 3], [2, 1, 5, 2],
                              [1, 1, 3, 1, 2], [1, 2, 8], [2, 1, 1, 1, 1],
                              [1, 3],
                              [1, 1, 4], [1, 2], [2]]]
constrains=[[[6], [13], [5], [13], [1, 11, 1],
                              [1, 1, 1, 1, 1, 1, 1], [11]],
                             [[1], [1, 1], [2, 1], [2, 4], [5, 1], [7], [5, 1],
                              [7], [5, 1], [1, 4], [1, 2, 1], [1, 4],
                              [1, 2, 1], [1, 1, 1], [1, 1], [1]]]
constrains = [[[5], [2, 2], [5], [5], [3], [1], [1], [1], [1],
                              [1], [1], [1], [1], [1], [1], [3], [2], [2], [2],
                              [1]], [[4], [5, 2, 1], [1, 18], [5, 1, 1], [4]]]

constrains =    [[[2], [2, 1], [1, 3], [1, 1, 1, 1], [1, 1, 5],
                              [1, 1, 1, 1, 1, 1], [1, 1, 1, 2, 1],
                              [1, 1, 1, 1],
                              [1, 1, 4, 3], [4, 3, 2], [1, 1, 1, 1, 1],
                              [7, 2, 1],
                              [1, 1, 1, 1, 3], [1, 1, 1, 1, 1, 1],
                              [1, 1, 5, 3],
                              [1, 1, 5, 1, 1], [1, 1, 2, 2, 1, 1],
                              [1, 1, 2, 2, 1, 1], [1, 1, 1, 1, 5],
                              [1, 1, 2, 2, 1, 1]],
                             [[1, 2], [6, 9], [1, 1], [16], [1, 1, 1],
                              [1, 7, 1],
                              [2, 1, 2, 6], [2, 2, 2], [1, 2, 2, 6],
                              [1, 1, 1, 1, 6, 1], [2, 3, 2, 1, 1],
                              [1, 1, 1, 2, 10], [4, 2, 2, 1, 1, 1], [11],
                              [1]]]

constrains =  [[[5, 1], [6, 2], [1, 2, 2, 1, 1], [7],
                              [2, 2, 1, 1],
                              [1, 1, 3], [4, 2], [1, 1, 4], [11], [1, 7],
                              [1, 3, 4], [2, 1, 4, 3], [1, 4, 1, 1, 3],
                              [1, 4, 1, 1, 2], [2, 2, 4], [6], [3, 4],
                              [1, 3, 3], [4, 2], [3, 2]],
                             [[2], [1, 1], [2, 3, 4], [2, 2, 2, 2, 2],
                              [4, 1, 1, 4, 2], [4, 2, 2, 3, 4],
                              [2, 1, 1, 2, 6], [5, 3, 4, 3], [5, 4, 2],
                              [1, 1, 1, 2, 2, 3], [2, 2, 3, 4, 1], [4, 7],
                              [1, 6, 3], [1, 7], [1, 6]]]

# print((nonogram.solve_easy_nonogram(constrains)))

# ([], [])
row = []
blocks = []

#[1, 1, 0], [2]
row = [1, 1, 0]
blocks = [2]

row, blocks =  [-1, -1, -1], [1]

row, blocks = [-1, -1, -1], [2]

row, blocks = [-1, -1, -1, -1, -1, -1, -1, -1], [2, 3, 1]

row, blocks = [-1, -1, -1, -1, -1, -1, -1, -1], [1, 2, 1]
#print(nonogram.row_variations(row,blocks))

rows = []
rows = [[]]
rows = [[], []]
rows = [[1, 0, -1, 0, 1]]
rows = [1, 0, -1],[-1, 0, 1]
rows = [-1, 0, 1, 1], [1, 1, 1, 1]
rows = [[1, 1, 1, 0, 0],
        [1, 1, 1, 0, 0],
        [1, 1, 1, 0, 0],
        [1, 1, 1, 0, 1],
        [1, -1, 1, 0, 0],]
rows = []
#print(nonogram.intersection_row(rows))

print(nonogram.row_variations([-1, -1, -1, 1, 0] , [2,2]))

#row_variations([1, 1, -1, 0], [3]) -> [[1, 1, 1, 0]]
#row_variations([-1, -1, -1, 0], [2]) -> [[0, 1, 1, 0], [1, 1, 0, 0]]
#row_variations([-1, 0, 1, 0, -1, 0], [1,1]) -> [[0, 0, 1, 0, 1, 0], [1, 0, 1, 0, 0, 0]]
#row_variations([-1, -1, -1] , [1]) -> [[1, 0, 0], [0, 1, 0], [0, 0, 1] ]
#row_variations([0, 0, 0] , [1]) -> [ ]
#row_variations([0, 0, -1, 1, 0] , [3]) -> [ ]
#row_variations([0, 0, -1, 1, 0] , [2]) -> [ [0, 0, 1, 1, 0]]
#row_variations([0, 0, 1, 1, 0] , [2]) -> [ [0, 0, 1, 1, 0]]